GNU Emacs NEWS -- history of user-visible changes.

Copyright (C) 2014-2017 Free Software Foundation, Inc.
See the end of the file for license conditions.

Please send Emacs bug reports to bug-gnu-emacs@gnu.org.
If possible, use M-x report-emacs-bug.

This file is about changes in Emacs version 26.

See file HISTORY for a list of GNU Emacs versions and release dates.
See files NEWS.25, NEWS.24, NEWS.23, NEWS.22, NEWS.21,
NEWS.20, NEWS.19, NEWS.18, and NEWS.1-17 for changes in older Emacs
versions.

You can narrow news to a specific version by calling 'view-emacs-news'
with a prefix argument or by typing C-u C-h C-n.

Temporary note:
+++ indicates that all necessary documentation updates are complete.
    (This means all relevant manuals in doc/ AND lisp doc-strings.)
--- means no change in the manuals is needed.
When you add a new item, use the appropriate mark if you are sure it applies,


* Installation Changes in Emacs 27.1


* Startup Changes in Emacs 26.1


* Changes in Emacs 27.1

+++
** New function 'logcount' calculates an integer's Hamming weight.


* Editing Changes in Emacs 26.1

+++
** New variable 'column-number-indicator-zero-based'.
Traditionally, in Column Number mode, the displayed column number
counts from zero starting at the left margin of the window.  This
behavior is now controlled by 'column-number-indicator-zero-based'.
If you would prefer for the displayed column number to count from one,
you may set this variable to nil.  (Behind the scenes, there is now a
new mode line construct, '%C', which operates exactly as '%c' does
except that it counts from one.)

+++
** New single-line horizontal scrolling mode.
The 'auto-hscroll-mode' variable can now have a new special value,
'current-line', which causes only the line where the cursor is
displayed to be horizontally scrolled when lines are truncated on
display and point moves outside the left or right window margin.

+++
** New mode line constructs '%o' and '%q', and user option
'mode-line-percent-position'.  '%o' displays the "degree of travel" of
the window through the buffer.  Unlike the default '%p', this
percentage approaches 100% as the window approaches the end of the
buffer.  '%q' displays the percentage offsets of both the start and
the end of the window, e.g. "5-17%".  The new option
'mode-line-percent-position' makes it easier to switch between '%p',
'%P', and these new constructs.

+++
** Two new user options 'list-matching-lines-jump-to-current-line' and
'list-matching-lines-current-line-face' to show highlighted the current
line in *Occur* buffer.

+++
** The 'occur' command can now operate on the region.

+++
** New bindings for 'query-replace-map'.
'undo', undo the last replacement; bound to 'u'.
'undo-all', undo all replacements; bound to 'U'.

---
** 'delete-trailing-whitespace' deletes whitespace after form feed.
In modes where form feed was treated as a whitespace character,
'delete-trailing-whitespace' would keep lines containing it unchanged.
It now deletes whitespace after the last form feed thus behaving the
same as in modes where the character is not whitespace.

---
** Emacs no longer prompts about editing a changed file when the file's
content is unchanged.  Instead of only checking the modification time,
Emacs now also checks the file's actual content before prompting the user.

---
** Various casing improvements.

*** 'upcase', 'upcase-region' et al. convert title case characters
(such as ǲ) into their upper case form (such as Ǳ).

*** 'capitalize', 'upcase-initials' et al. make use of title-case forms
of initial characters (correctly producing for example ǅungla instead
of incorrect Ǆungla).

*** Characters which turn into multiple ones when cased are correctly handled.
For example, ﬁ ligature is converted to FI when upper cased.

*** Greek small sigma is correctly handled when at the end of the word.
Strings such as ΌΣΟΣ are now correctly converted to Όσος when
capitalized instead of incorrect Όσοσ (compare lowercase sigma at the
end of the word).

+++
** Emacs can now auto-save buffers to visited files in a more robust
manner via the new mode 'auto-save-visited-mode'.  Unlike
'auto-save-visited-file-name', this mode uses the normal saving
procedure and therefore obeys saving hooks.
'auto-save-visited-file-name' is now obsolete.

+++
** New behavior of 'mark-defun'.
Prefix argument selects that many (or that many more) defuns.
Negative prefix arg flips the direction of selection.  Also,
'mark-defun' between defuns correctly selects N following defuns (or
-N previous for negative arguments).  Finally, comments preceding the
defun are selected unless they are separated from the defun by a blank
line.

** New command 'replace-buffer-contents'.
This command replaces the contents of the accessible portion of the
current buffer with the contents of the accessible portion of a
different buffer while keeping point, mark, markers, and text
properties as intact as possible.

+++
** New commands 'apropos-local-variable' and 'apropos-local-value.
These are buffer-local versions of 'apropos-variable' and
'apropos-value', respectively.  They show buffer-local variables whose
names and values, respectively, match a given pattern.

+++
** More user control of reordering bidirectional text for display.
The two new variables, 'bidi-paragraph-start-re' and
'bidi-paragraph-separate-re', allow customization of what exactly are
paragraphs, for the purposes of bidirectional display.

---
** New variable 'x-wait-for-event-timeout'.
This controls how long Emacs will wait for updates to the graphical
state to take effect (making a frame visible, for example).

+++
** The new user option 'electric-quote-replace-double' controls
whether " is also replaced in 'electric-quote-mode'.  If non-nil, " is
replaced by a double typographic quote.


* Changes in Specialized Modes and Packages in Emacs 26.1

---
** New function `cl-generic-p'.

** Dired

+++
*** You can answer 'all' in 'dired-do-delete' to delete recursively all
remaining directories without more prompts.

+++
*** Dired supports wildcards in the directory part of the file names.

+++
*** You can now use '`?`' in 'dired-do-shell-command'.
It gets replaced by the current file name, like ' ? '.

+++
*** A new option 'dired-always-read-filesystem' default to nil.
If non-nil, buffers visiting files are reverted before search them;
for instance, in 'dired-mark-files-containing-regexp' a non-nil value
of this option means the file is revisited in a temporary buffer;
this temporary buffer is the actual buffer searched: the original buffer
visiting the file is not modified.

---
*** Users can now customize mouse clicks in Dired in a more flexible way.
The new command 'dired-mouse-find-file' can be bound to a mouse click
and used to visit files/directories in Dired in the selected window.
The new command 'dired-mouse-find-file-other-frame' similarly visits
files/directories in another frame.  You can write your own commands
that invoke 'dired-mouse-find-file' with non-default optional
arguments, to tailor the effects of mouse clicks on file names in
Dired buffers.

+++
*** In wdired, when editing files to contain slash characters,
the resulting directories are automatically created.  Whether to do
this is controlled by the 'wdired-create-parent-directories' variable.

+++
*** 'W' is now bound to 'browse-url-of-dired-file', and is useful for
viewing HTML files and the like.

---
*** New variable 'dired-clean-confirm-killing-deleted-buffers'
controls whether Dired asks to kill buffers visiting deleted files and
directories.  The default is t, so Dired asks for confirmation, to
keep previous behavior.

---
** html2text is now marked obsolete.

---
** smerge-refine-regions can refine regions in separate buffers

---
** Info menu and index completion uses substring completion by default.
This can be customized via the info-menu category in
completion-category-override.

+++
** The ancestor buffer is shown by default in 3-way merges.
A new option ediff-show-ancestor and a new toggle
ediff-toggle-show-ancestor.

---
** TeX: Add luatex and xetex as alternatives to pdftex

** Electric-Buffer-menu

+++
*** Key 'U' is bound to 'Buffer-menu-unmark-all' and key 'M-DEL' is
bound to 'Buffer-menu-unmark-all-buffers'.

** bs

---
*** Two new commands 'bs-unmark-all', bound to 'U', and
'bs-unmark-previous', bound to <backspace>.

** Buffer-menu

+++
*** Two new commands 'Buffer-menu-unmark-all', bound to 'U' and
'Buffer-menu-unmark-all-buffers', bound to 'M-DEL'.

---
** Checkdoc

*** 'checkdoc-arguments-in-order-flag' now defaults to nil.

** Gnus

*** New variable 'xterm-set-window-title' controls whether Emacs
sets the XTerm window title.  The default is to set the window title.


* New Modes and Packages in Emacs 26.1


* Incompatible Lisp Changes in Emacs 27.1

+++
** 'file-attributes', 'file-symlink-p' and 'make-symbolic-link' no
longer quietly mutate the target of a local symbolic link, so that
Emacs can access and copy them reliably regardless of their contents.
The following changes are involved.

---
*** 'file-attributes' and 'file-symlink-p' no longer prepend "/:" to
symbolic links whose targets begin with "/" and contain ":".  For
example, if a symbolic link "x" has a target "/y:z:", '(file-symlink-p
"x")' now returns "/y:z:" rather than "/:/y:z:".

---
*** 'make-symbolic-link' no longer looks for file name handlers of
target when creating a symbolic link.  For example,
'(make-symbolic-link "/y:z:" "x")' now creates a symbolic link to
"/y:z:" instead of failing.

+++
*** 'make-symbolic-link' removes the remote part of a link target if
target and newname have the same remote part.  For example,
'(make-symbolic-link "/x:y:a" "/x:y:b")' creates a link with the
literal string "a"; and '(make-symbolic-link "/x:y:a" "/x:z:b")'
creates a link with the literal string "/x:y:a" instead of failing.

+++
*** 'make-symbolic-link' now expands a link target with leading "~"
only when the optional third arg is an integer, as when invoked
interactively.  For example, '(make-symbolic-link "~y" "x")' now
creates a link with target the literal string "~y"; to get the old
behavior, use '(make-symbolic-link (expand-file-name "~y") "x")'.  To
avoid this expansion in interactive use, you can now prefix the link
target with "/:".  For example, '(make-symbolic-link "/:~y" "x" 1)'
now creates a link to literal "~y".

+++
** 'file-truename' returns a quoted file name if the target of a
symbolic link has remote file name syntax.

+++
** Module functions are now implemented slightly differently; in
particular, the function 'internal--module-call' has been removed.
Code that depends on undocumented internals of the module system might
break.

---
** The argument LOCKNAME of 'write-region' is propagated to file name
handlers now.

---
** When built against recent versions of GTK+, Emacs always uses
gtk_window_move for moving frames and ignores the value of the
variable 'x-gtk-use-window-move'.  The variable is now obsolete.

+++
** Several functions that create or rename files now treat their
destination argument specially only when it is a directory name, i.e.,
when it ends in '/' on GNU and other POSIX-like systems.  When the
destination argument D of one of these functions is an existing
directory and the intent is to act on an entry in that directory, D
should now be a directory name.  For example, (rename-file "e" "f/")
renames to 'f/e'.  Although this formerly happened sometimes even when
D was not a directory name, as in (rename-file "e" "f") where 'f'
happened to be a directory, the old behavior often contradicted the
documentation and had inherent races that led to security holes.  A
call like (rename-file C D) that used the old, undocumented behavior
can be written as (rename-file C (file-name-as-directory D)), a
formulation portable to both older and newer versions of Emacs.
Affected functions include add-name-to-file, copy-directory,
copy-file, format-write-file, gnus-copy-file, make-symbolic-link,
rename-file, thumbs-rename-images, and write-file.

---
** The list returned by 'overlays-at' is now in decreasing priority order.
The documentation of this function always said the order should be
that of decreasing priority, if the 2nd argument of the function is
non-nil, but the code returned the list in the increasing order of
priority instead.  Now the code does what the documentation says it
should do.

---
** The function 'eldoc-message' now accepts a single argument.
Programs that called it with multiple arguments before should pass
them through 'format' first.  Even that is discouraged: for ElDoc
support, you should set 'eldoc-documentation-function' instead of
calling 'eldoc-message' directly.


* Lisp Changes in Emacs 26.1

+++
** The function 'assoc' now takes an optional third argument TESTFN.
This argument, when non-nil, is used for comparison instead of
'equal'.

+++
** New optional argument TESTFN in 'alist-get', 'map-elt' and 'map-put'.
If non-nil, the argument specifies a function to use for comparison,
instead of, respectively, 'assq' and 'eql'.

+++
** New function 'seq-set-equal-p' to check if SEQUENCE1 and SEQUENCE2
contain the same elements, regardless of the order.

+++
** The new function 'mapbacktrace' applies a function to all frames of
the current stack trace.

+++
** The new function 'file-name-case-insensitive-p' tests whether a
given file is on a case-insensitive filesystem.

+++
** Several accessors for the value returned by 'file-attributes'
have been added.  They are: 'file-attribute-type',
'file-attribute-link-number', 'file-attribute-user-id',
'file-attribute-group-id', 'file-attribute-access-time',
'file-attribute-modification-time',
'file-attribute-status-change-time', 'file-attribute-size',
'file-attribute-modes', 'file-attribute-inode-number',
'file-attribute-device-number' and 'file-attribute-collect'.

+++
** The new function 'buffer-hash' computes a fast, non-consing hash of
a buffer's contents.

+++
** 'interrupt-process' now consults the list 'interrupt-process-functions',
to determine which function has to be called in order to deliver the
SIGINT signal.  This allows Tramp to send the SIGINT signal to remote
asynchronous processes.  The hitherto existing implementation has been
moved to 'internal-default-interrupt-process'.

+++
** The new function 'read-multiple-choice' prompts for multiple-choice
questions, with a handy way to display help texts.

---
** 'comment-indent-function' values may now return a cons to specify a
range of indentation.

+++
** New optional argument TEXT in 'make-temp-file'.

---
** New function `define-symbol-prop'.

** Checksum/Hash

+++
** New function 'secure-hash-algorithms' to list the algorithms that
'secure-hash' supports.
See the node "(elisp) Checksum/Hash" in the ELisp manual for details.

+++
** Emacs now exposes the GnuTLS cryptographic API with the functions
'gnutls-macs' and 'gnutls-hash-mac'; 'gnutls-digests' and
'gnutls-hash-digest'; 'gnutls-ciphers' and 'gnutls-symmetric-encrypt'
and 'gnutls-symmetric-decrypt'.
See the node "(elisp) GnuTLS Cryptography" in the ELisp manual for details.

+++
** Emacs now supports records for user-defined types, via the new
functions 'make-record', 'record', and 'recordp'.  Records are now
used internally to represent cl-defstruct and defclass instances, for
example.

+++
** 'save-some-buffers' now uses 'save-some-buffers-default-predicate'
to decide which buffers to ask about, if the PRED argument is nil.
The default value of 'save-some-buffers-default-predicate' is nil,
which means ask about all file-visiting buffers.

---
** string-(to|as|make)-(uni|multi)byte are now declared obsolete.

+++
** New variable 'while-no-input-ignore-events' which allow
setting which special events 'while-no-input' should ignore.
It is a list of symbols.

---
** New function 'undo-amalgamate-change-group' to get rid of
undo-boundaries between two states.

---
** New var 'definition-prefixes' is a hash table mapping prefixes to
the files where corresponding definitions can be found.  This can be
used to fetch definitions that are not yet loaded, for example for
'C-h f'.

---
** New var 'syntax-ppss-table' to control the syntax-table used in
'syntax-ppss'.

+++
** 'define-derived-mode' can now specify an :after-hook form, which
gets evaluated after the new mode's hook has run.  This can be used to
incorporate configuration changes made in the mode hook into the
mode's setup.

---
** Autoload files can be generated without timestamps,
by setting 'autoload-timestamps' to nil.
FIXME As an experiment, nil is the current default.
If no insurmountable problems before next release, it can stay that way.

---
** 'gnutls-boot' now takes a parameter ':complete-negotiation' that
says that negotiation should complete even on non-blocking sockets.

---
** There is now a new variable 'flyspell-sort-corrections-function'
that allows changing the way corrections are sorted.

---
** The new command 'fortune-message' has been added, which displays
fortunes in the echo area.

+++
** New function 'func-arity' returns information about the argument list
of an arbitrary function.  This generalizes 'subr-arity' for functions
that are not built-in primitives.  We recommend using this new
function instead of 'subr-arity'.

---
** New function 'region-bounds' can be used in the interactive spec
to provide region boundaries (for rectangular regions more than one)
to an interactively callable function as a single argument instead of
two separate arguments region-beginning and region-end.

+++
** 'parse-partial-sexp' state has a new element.  Element 10 is
non-nil when the last character scanned might be the first character
of a two character construct, i.e., a comment delimiter or escaped
character.  Its value is the syntax of that last character.

+++
** 'parse-partial-sexp's state, element 9, has now been confirmed as
permanent and documented, and may be used by Lisp programs.  Its value
is a list of currently open parenthesis positions, starting with the
outermost parenthesis.

---
** 'read-color' will now display the color names using the color itself
as the background color.

---
** The function 'redirect-debugging-output' now works on platforms
other than GNU/Linux.

+++
** The new function 'string-version-lessp' compares strings by
interpreting consecutive runs of numerical characters as numbers, and
compares their numerical values.  According to this predicate,
"foo2.png" is smaller than "foo12.png".

---
** Numeric comparisons and 'logb' no longer return incorrect answers
due to internal rounding errors.  For example, (< most-positive-fixnum
(+ 1.0 most-positive-fixnum)) now correctly returns t on 64-bit hosts.

---
** The functions 'ffloor', 'fceiling', 'ftruncate' and 'fround' now
accept only floating-point arguments, as per their documentation.
Formerly, they quietly accepted integer arguments and sometimes
returned nonsensical answers, e.g., (< N (ffloor N)) could return t.

---
** On hosts like GNU/Linux x86-64 where a 'long double' fraction
contains at least EMACS_INT_WIDTH - 3 bits, 'format' no longer returns
incorrect answers due to internal rounding errors when formatting
Emacs integers with %e, %f, or %g conversions.  For example, on these
hosts (eql N (string-to-number (format "%.0f" N))) now returns t for
all Emacs integers N.

---
** Calls that accept floating-point integers (for use on hosts with
limited integer range) now signal an error if arguments are not
integral.  For example (decode-char 'ascii 0.5) now signals an error.

+++
** The new function 'char-from-name' converts a Unicode name string
to the corresponding character code.

+++
** New functions 'sxhash-eq' and 'sxhash-eql' return hash codes of a
Lisp object suitable for use with 'eq' and 'eql' correspondingly.  If
two objects are 'eq' ('eql'), then the result of 'sxhash-eq'
('sxhash-eql') on them will be the same.

+++
** Function 'sxhash' has been renamed to 'sxhash-equal' for
consistency with the new functions.  For compatibility, 'sxhash'
remains as an alias to 'sxhash-equal'.

+++
** 'make-hash-table' now defaults to a rehash threshold of 0.8125
instead of 0.8, to avoid rounding glitches.

+++
** New function 'add-variable-watcher' can be used to call a function
when a symbol's value is changed.  This is used to implement the new
debugger command 'debug-on-variable-change'.

+++
** Time conversion functions that accept a time zone rule argument now
allow it to be OFFSET or a list (OFFSET ABBR), where the integer
OFFSET is a count of seconds east of Universal Time, and the string
ABBR is a time zone abbreviation.  The affected functions are
'current-time-string', 'current-time-zone', 'decode-time',
'format-time-string', and 'set-time-zone-rule'.

+++
** 'format-time-string' now formats "%q" to the calendar quarter.

+++
** New built-in function 'mapcan'.
It avoids unnecessary consing (and garbage collection).

+++
** 'car' and 'cdr' compositions 'cXXXr' and 'cXXXXr' are now part of Elisp.

+++
** 'gensym' is now part of Elisp.

---
** Low-level list functions like 'length' and 'member' now do a better
job of signaling list cycles instead of looping indefinitely.

+++
** The new functions 'make-nearby-temp-file' and 'temporary-file-directory'
can be used for creation of temporary files of remote or mounted directories.

+++
** On GNU platforms when operating on a local file, 'file-attributes'
no longer suffers from a race when called while another process is
altering the filesystem.  On non-GNU platforms 'file-attributes'
attempts to detect the race, and returns nil if it does so.

+++
** The new function 'file-local-name' can be used to specify arguments
of remote processes.

+++
** The new functions 'file-name-quote', 'file-name-unquote' and
'file-name-quoted-p' can be used to quote / unquote file names with
the prefix "/:".

+++
** The new error 'file-missing', a subcategory of 'file-error', is now
signaled instead of 'file-error' if a file operation acts on a file
that does not exist.

+++
** The function 'delete-directory' no longer signals an error when
operating recursively and when some other process deletes the directory
or its files before 'delete-directory' gets to them.

+++
*** New error type 'user-search-failed' like 'search-failed' but
avoids debugger like 'user-error'.

+++
** The function 'line-number-at-pos' now takes a second optional
argument 'absolute'.  If this parameter is nil, the default, this
function keeps on returning the line number taking potential narrowing
into account.  If this parameter is non-nil, the function ignores
narrowing and returns the absolute line number.

---
** The function 'color-distance' now takes a second optional argument
'metric'.  When non-nil, it should be a function of two arguments that
accepts two colors and returns a number.

** Changes in Frame and Window Handling

+++
*** Resizing a frame no longer runs 'window-configuration-change-hook'.
'window-size-change-functions' should be used instead.

+++
*** The new function 'frame-size-changed-p' can tell whether a frame has
been resized since the last time 'window-size-change-functions' has been
run.

+++
*** The function 'frame-geometry' now also returns the width of a
frame's outer border.

+++
*** New frame parameters and changed semantics for older ones

+++
**** 'z-group' positions a frame above or below all others.

+++
**** 'min-width' and 'min-height' specify the absolute minimum size of a
frame.

+++
**** 'parent-frame' makes a frame the child frame of another Emacs
frame.  The section "Child Frames" in the Elisp manual describes the
intrinsics of that relationship.

+++
**** 'delete-before' triggers deletion of one frame before that of
another.

+++
**** 'mouse-wheel-frame' specifies another frame whose windows shall be
scrolled instead.

+++
**** 'no-other-frame' has 'next-frame' and 'previous-frame' skip this
frame.

+++
**** 'skip-taskbar' removes a frame's icon from the taskbar and has
Alt-<TAB> skip this frame.

+++
**** 'no-focus-on-map' avoids that a frame gets input focus when mapped.

+++
**** 'no-accept-focus' means that a frame does not want to get input
focus via the mouse.

+++
**** 'undecorated' removes the window manager decorations from a frame.

+++
**** 'override-redirect' tells the window manager to disregard this
frame.

+++
**** 'width' and 'height' allow to specify pixel values and ratios now.

+++
**** 'left' and 'top' allow to specify ratios now.

+++
**** 'keep-ratio' preserves size and position of child frames when their
parent frame is resized.

+++
**** 'no-special-glyphs' suppresses display of truncation and
continuation glyphs in a frame.

+++
**** 'auto-hide-function' and 'minibuffer-exit' handle auto hiding of
frames and exiting from minibuffer individually.

+++
**** 'fit-frame-to-buffer-margins' and 'fit-frame-to-buffer-sizes'
handle fitting a frame to its buffer individually.

+++
**** 'drag-internal-border', 'drag-with-header-line',
'drag-with-mode-line', 'snap-width', 'top-visible' and 'bottom-visible'
allow to drag and resize frames with the mouse.

*** The new function 'frame-list-z-order' returns a list of all frames
in Z (stacking) order.

+++
*** The function 'x-focus-frame' optionally tries to not activate its
frame.

+++
*** The variable 'focus-follows-mouse' has a third meaningful value
'auto-raise' to indicate that the window manager automatically raises a
frame when the mouse pointer enters it.

+++
*** The new function 'frame-restack' puts a frame above or below
another on the display.

+++
*** The new face 'internal-border' specifies the background of a frame's
internal border.

+++
*** The NORECORD argument of 'select-window' now has a meaningful value
'mark-for-redisplay' which is like any other non-nil value but marks
WINDOW for redisplay.

+++
*** Support for side windows is now official.
The display action function 'display-buffer-in-side-window' will
display its buffer in a side window.  Functions for toggling all side
windows on a frame, changing and reversing the layout of side windows
and returning the main (major non-side) window of a frame are
provided.  For details consult the section "Side Windows" in the Elisp
manual.

+++
*** Support for atomic windows - rectangular compositions of windows
treated by 'split-window', 'delete-window' and 'delete-other-windows'
like a single live window - is now official.  For details consult the
section "Atomic Windows" in the Elisp manual.

+++
*** New 'display-buffer' alist entry 'window-parameters' allows to
assign window parameters to the window used for displaying the buffer.

+++
*** New function 'display-buffer-reuse-mode-window' is an action function
suitable for use in 'display-buffer-alist'.  For example, to avoid
creating a new window when opening man pages when there's already one,
use

(add-to-list 'display-buffer-alist
     '("\\`\\*Man .*\\*\\'" .
       (display-buffer-reuse-mode-window
        (inhibit-same-window . nil)
        (mode . Man-mode))))

+++
*** New window parameter 'no-delete-other-windows' prevents that
its window gets deleted by 'delete-other-windows'.

+++
*** New window parameters 'mode-line-format' and 'header-line-format'
allow to override the buffer-local formats for this window.

+++
*** New command 'window-swap-states' swaps the states of two live
windows.

+++
*** New functions 'window-pixel-width-before-size-change' and
'window-pixel-height-before-size-change' support detecting which
window changed size when 'window-size-change-functions' are run.

+++
*** The new function 'window-lines-pixel-dimensions' returns the pixel
dimensions of a window's text lines.

+++
*** The new function 'window-largest-empty-rectangle' returns the
dimensions of the largest rectangular area not occupying any text in a
window's body.

+++
*** The semantics of 'mouse-autoselect-window' has changed slightly.
For details see the section "Mouse Window Auto-selection" in the Elisp
manual.

---
** 'tcl-auto-fill-mode' is now declared obsolete.  Its functionality
can be replicated simply by setting 'comment-auto-fill-only-comments'.

** New pcase pattern 'rx' to match against a rx-style regular expression.
For details, see the doc string of 'rx--pcase-macroexpander'.

---
** New functions to set region from secondary selection and vice versa.
The new functions 'secondary-selection-to-region' and
'secondary-selection-from-region' let you set the beginning and the
end of the region from those of the secondary selection and vise
versa.

---
** The 'file-system-info' function is now available on all platforms.
instead of just Microsoft platforms.  This fixes a 'get-free-disk-space'
bug on OS X 10.8 and later (Bug#28639).

---
** The function 'get-free-disk-space' returns now a non-nil value for
remote systems, which support this check.


* Changes in Emacs 26.1 on Non-Free Operating Systems

+++
** Intercepting hotkeys on Windows 7 and later now works better.
The new keyboard hooking code properly grabs system hotkeys such as
Win-* and Alt-TAB, in a way that Emacs can get at them before the
system.  This makes the 'w32-register-hot-key' functionality work
again on all versions of MS-Windows starting with Windows 7.  On
Windows NT and later you can now register any hotkey combination.  (On
Windows 9X, the previous limitations, spelled out in the Emacs manual,
still apply.)

---
** 'convert-standard-filename' no longer mirrors slashes on MS-Windows.
Previously, on MS-Windows this function converted slash characters in
file names into backslashes.  It no longer does that.  If your Lisp
program used 'convert-standard-filename' to prepare file names to be
passed to subprocesses (which is not the recommended usage of that
function), you will now have to mirror slashes in your application
code.  One possible way is this:

         (let ((start 0))
           (while (string-match "/" file-name start)
             (aset file-name (match-beginning 0) ?\\)
             (setq start (match-end 0))))

---
** GUI sessions on MS-Windows now treat SIGINT like Posix platforms do.
The effect of delivering a Ctrl-C (SIGINT) signal to a GUI Emacs on
MS-Windows is now the same as on Posix platforms -- Emacs saves the
session and exits.  In particular, this will happen if you start
emacs.exe from the Windows shell, then type Ctrl-C into that shell's
window.

---
** 'signal-process' supports SIGTRAP on Windows XP and later.
The 'kill' emulation on Windows now maps SIGTRAP to a call to the
'DebugBreakProcess' API.  This causes the receiving process to break
execution and return control to the debugger.  If no debugger is
attached to the receiving process, the call is typically ignored.
This is in contrast to the default action on POSIX Systems, where it
causes the receiving process to terminate with a core dump if no
debugger has been attached to it.

---
** 'set-mouse-position' and 'set-mouse-absolute-pixel-position' work
on macOS.

---
** Emacs can now be run as a GUI application from the command line on
macOS.

+++
** 'ns-appearance' and 'ns-transparent-titlebar' change the appearance
of frame decorations on macOS 10.9+.

---
** 'ns-use-thin-smoothing' enables thin font smoothing on macOS 10.8+.

---
** 'process-attributes' on Darwin systems now returns more information.

---
** Mousewheel and trackpad scrolling on macOS 10.7+ now behaves more
like the macOS default.  The new variables 'ns-mwheel-line-height',
'ns-use-mwheel-acceleration' and 'ns-use-mwheel-momentum' can be used
to customize the behavior.


----------------------------------------------------------------------
This file is part of GNU Emacs.

GNU Emacs is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.


Local variables:
coding: utf-8
mode: outline
paragraph-separate: "[ 	]*$"
end:
